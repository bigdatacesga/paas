{% set comma = joiner(",") %}
{
  "dnsname": "{{ clusterid }}",
  "nodes": {
      {% for n in range(0, opts['size']) %}
      {{ comma() }} "cassandranode{{ n }}": {
          "docker_image": "docker-registry.cesga.es:5000/cassandra:3.0.8-1-V1",
          "docker_opts": "--privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro ",
          "cpu": {{ opts['cpu'] }},
          "mem": {{ opts['mem'] }},
          "disks": { {% set comma = joiner(",") %}{% for k in range(0, opts['disks']) %}
              {{ comma() }} "disk{{ k }}": { "destination": "/data/{{ k }}" } {% endfor %}
          },
          "networks": {
              "eth0": { "type": "dynamic", "networkname": "storage" },
              "eth1": { "type": "dynamic", "networkname": "admin" }
          }
      }
      {% endfor %}
  },
  "services": {
      "seeds": { "nodes": ["cassandranode0"] },
      "others": { "nodes": [{% set comma = joiner(",") %}{% for n in range(1, opts['size']) %}{{ comma() }}"cassandranode{{ n }}"{% endfor %}] },
      "cassandra": {
        "nodes": [{% set comma = joiner(",") %}{% for n in range(opts['size']) %}{{ comma() }}"cassandranode{{ n }}"{% endfor %}],
        "max_heap_size": "{{ opts['max_heap_size'] }}",
        "initial_heap_size": "{{ opts['initial_heap_size'] }}",
        "young_generation_size": "{{ opts['young_generation_size'] }}"
      }

  }
}
